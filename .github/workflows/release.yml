name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
      ref:
        description: "Branch, tag or SHA to checkout"
        required: false
        default: 'master'
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set release version
        run: |
          VERSION=${{ github.event.inputs.version }}
          ./mvnw versions:set -DnewVersion=$VERSION

      - name: Build
        run: ./mvnw --no-transfer-progress -B --file pom.xml verify

      - name: Show Reports
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: reports-${{ runner.os }}
          path: target/

      - name: Release
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PROJECT_VERSION: ${{ github.event.inputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Commit release version
        run: |
          VERSION=${{ github.event.inputs.version }}
          sed -i -e "s/^\:project-version\:\ \ \ \ .*/:project-version:    $VERSION/g" README.adoc
          git add pom.xml
          git add README.adoc
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "Releasing version $VERSION"
          git push origin ${{ github.event.inputs.ref }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: fieldengineering/redis-sql-trino:latest,fieldengineering/redis-sql-trino:${{ github.event.inputs.version }}

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GIT_ACCESS_TOKEN }}
          publish_dir: ./target/generated-docs
          
      - name: Commit next development version
        run: |
          ./mvnw build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT
          git add pom.xml
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "build: Bump for next development cycle"
          git push origin ${{ github.event.inputs.ref }}